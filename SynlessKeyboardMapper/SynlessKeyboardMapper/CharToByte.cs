using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SynlessKeyboardMapper
{
    public static class KeyToKey
    {
        public static Dictionary<string, string> forward = new Dictionary<string, string>()
        {
            {"A","97"},
            {"B","98"},
            {"C","99"},
            {"D","100"},
            {"E","101"},
            {"F","102"},
            {"G","103"},
            {"H","104"},
            {"I","105"},
            {"J","106"},
            {"K","107"},
            {"L","108"},
            {"M","109"},
            {"N","110"},
            {"O","111"},
            {"P","112"},
            {"Q","113"},
            {"R","114"},
            {"S","115"},
            {"T","116"},
            {"U","117"},
            {"V","118"},
            {"W","119"},
            {"X","120"},
            {"Y","121"},
            {"Z","122"},

            {"F1","194"},
            {"F2","195"},
            {"F3","196"},
            {"F4","197"},
            {"F5","198"},
            {"F6","199"},
            {"F7","200"},
            {"F8","201"},
            {"F9","202"},
            {"F10","203"},
            {"F11","204"},
            {"F12","205"},

            {"D0","48"},
            {"D1","49"},
            {"D2","50"},
            {"D3","51"},
            {"D4","52"},
            {"D5","53"},
            {"D6","54"},
            {"D7","55"},
            {"D8","56"},
            {"D9","57"},

            {"0","48"},
            {"1","49"},
            {"2","50"},
            {"3","51"},
            {"4","52"},
            {"5","53"},
            {"6","54"},
            {"7","55"},
            {"8","56"},
            {"9","57"},

            {"NumPad0","352"},
            {"NumPad1","341"},
            {"NumPad2","342"},
            {"NumPad3","343"},
            {"NumPad4","344"},
            {"NumPad5","345"},
            {"NumPad6","346"},
            {"NumPad7","347"},
            {"NumPad8","350"},
            {"NumPad9","351"},
            {"Divide","334"},
            {"Add","337"},
            {"Subtract","336"},
            {"Multiply","335"},
            {"Decimal","353"},
            
            {"Up","218"},
            {"Right","215"},
            {"Down","217"},
            {"Left","216"},

            {"Escape","177"},
            {"Tab","179"},
            {"LeftShift","129"},
            {"RightShift","133"},
            {"LeftCtrl","128"},
            {"RightCtrl","132"},
            {"Capital","193"},
            {"LWin","131"},
            {"RWin","135"},
            {"System","130"},
            {"Apps","131"},
            {"Insert","209"},
            {"Back","178"},
            {"Home","208"},
            {"PageUp","211"},
            {"Next","214" },
            {"End","212"},
            {"Space","32" },
            {"Return","176" },

            {"OemOpenBrackets","41"},
            {"OemPlus","61"},

            
            {"Oem1","36"},
            {"Oem3","42"},
            {"Oem5","129"},
            {"Oem8","33"},
            {"OemBackslash","60"},
            
            {"OemComma","44"},
            {"OemQuestion","58" },
            {"OemPeriod","59" },
        };
        /*
        public static Dictionary<string, string> backward = new Dictionary<string, string>()
        {
            {"A","97"},
            {"B","98"},
            {"C","99"},
            {"D","100"},
            {"E","101"},
            {"F","102"},
            {"G","103"},
            {"H","104"},
            {"I","105"},
            {"J","106"},
            {"K","107"},
            {"L","108"},
            {"M","109"},
            {"N","110"},
            {"O","111"},
            {"P","112"},
            {"Q","113"},
            {"R","114"},
            {"S","115"},
            {"T","116"},
            {"U","117"},
            {"V","118"},
            {"W","119"},
            {"X","120"},
            {"Y","121"},
            {"Z","122"},

            {"F1","194"},
            {"F2","195"},
            {"F3","196"},
            {"F4","197"},
            {"F5","198"},
            {"F6","199"},
            {"F7","200"},
            {"F8","201"},
            {"F9","202"},
            {"F10","203"},
            {"F11","204"},
            {"F12","205"},

            {"D0","48"},
            {"D1","49"},
            {"D2","50"},
            {"D3","51"},
            {"D4","52"},
            {"D5","53"},
            {"D6","54"},
            {"D7","55"},
            {"D8","56"},
            {"D9","57"},

            {"NumPad0","352"},
            {"NumPad1","341"},
            {"NumPad2","342"},
            {"NumPad3","343"},
            {"NumPad4","344"},
            {"NumPad5","345"},
            {"NumPad6","346"},
            {"NumPad7","347"},
            {"NumPad8","350"},
            {"NumPad9","351"},
            {"Divide","334"},
            {"Add","337"},
            {"Subtract","336"},
            {"Multiply","335"},
            {"Decimal","353"},

            {"Up","218"},
            {"Right","215"},
            {"Down","217"},
            {"Left","216"},

            {"Escape","177"},
            {"Tab","179"},
            {"LeftShift","129"},
            {"RightShift","133"},
            {"LeftCtrl","128"},
            {"RightCtrl","132"},
            {"Capital","193"},
            {"LWin","131"},
            {"RWin","135"},
            {"System","130"},
            {"Apps","131"},
            {"Insert","209"},
            {"Back","178"},
            {"Home","208"},
            {"PageUp","211"},
            {"Next","214" },
            {"End","212"},
            {"Space","32" },
            {"Return","176" },

            {"OemOpenBrackets","41"},
            {"OemPlus","61"},


            {"Oem1","36"},
            {"42""Oem3"},
            {"129","Oem5"},
            {"33","Oem8"},
            {"60","OemBackslash"},

            {"44","OemComma"},
            {"58", "OemQuestion"},
            {"59","OemPeriod"},
        };*/

        public static Dictionary<TValue, TKey> Reverse<TKey, TValue>(this IDictionary<TKey, TValue> source)
        {
             var dictionary = new Dictionary<TValue, TKey>();
             foreach (var entry in source)
             {
                 if(!dictionary.ContainsKey(entry.Value))
                     dictionary.Add(entry.Value, entry.Key);
             }
             return dictionary;
        } 
    }
}